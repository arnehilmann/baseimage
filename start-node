#!/bin/bash
set -u -e -E -C -o pipefail

IMAGE=${DOCKER_IMAGE:-arne/baseimage}

NR=${1:-1}
NAME="node$NR"
DOMAIN="node.consul"

if docker inspect $NAME > /dev/null 2>&1; then
    echo "housekeeping started"
    echo "container $NAME already known"
    echo -n "stopping "
    docker stop $NAME
    docker stop $NAME
    sleep 1
    echo -n "removing "
    if ! docker rm $NAME; then
        echo "cannot remove container $NAME, aborting..."
        exit 2
    fi
    echo "housekeeping finished"
fi

OPTS="$USER $(id -u $USER)"

PUBLIC_KEY_FILE=$HOME/.ssh/id_rsa.pub
if [[ -r $PUBLIC_KEY_FILE ]]; then
    TMP_DIR=tmp/ssh.pub.key
    mkdir -p $TMP_DIR
    cp $PUBLIC_KEY_FILE $TMP_DIR
    OPTS="$OPTS $TMP_DIR"
fi

DNS_OPTS=""
DNS_IP=$(docker inspect --format='{{.NetworkSettings.IPAddress}}' dns 2> /dev/null || :)
if [[ -n "$DNS_IP" ]]; then
    echo "local dns server ip: $DNS_IP"
    DNS_OPTS="--dns $DNS_IP --dns-search $DOMAIN"
else
    echo "no local dns server found"
fi

echo "starting container $NAME"
DOCKER_ID=$(docker run -d \
    -v $(pwd):/docker \
    -w /docker \
    -h $NAME \
    --name=$NAME \
    $DNS_OPTS \
    $IMAGE \
    $OPTS)

IP=$(docker inspect --format='{{.NetworkSettings.IPAddress}}' $DOCKER_ID)
echo "container id: $DOCKER_ID"
echo "container ip: $IP"

if [[ -n "$DNS_IP" ]]; then
    echo "adding to local dns"
    curl -X PUT -d '{"Node": "'$NAME'", "Address": "'$IP'"}' localhost:8500/v1/catalog/register

    echo "rechecking local dns"
    dig +short $NAME.$DOMAIN
fi

echo "$NAME/$IP started"
echo
