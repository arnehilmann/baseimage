#!/bin/bash
set -u -e -E -C -o pipefail
set -x

IMAGE=${DOCKER_IMAGE:-arne/baseimage}

NR=${1:-1}
NAME="node$NR"
DOMAIN="node.consul"
TMP_DIR=tmp

echo "Starting $NAME, based on $IMAGE"

if docker inspect $NAME > /dev/null 2>&1; then
    echo ". container $NAME already known, initiating housekeeping"
    echo -n ". stopping "
    docker stop $NAME
    #docker stop $NAME
    sleep 1
    echo -n ". removing "
    if ! docker rm $NAME; then
        echo
        echo "cannot remove container $NAME, aborting..."
        exit 2
    fi
    echo ". housekeeping finished"
fi

OPTS="$USER $(id -u $USER)"

rm -rf $TMP_DIR && mkdir -p $TMP_DIR

PROFILED_DIR=$TMP_DIR/etc/profile.d
mkdir -p $PROFILED_DIR
env | grep -i proxy | sed "s/^/export /" > $PROFILED_DIR/proxies.sh || :
chmod -R a+rx $PROFILED_DIR

PUBLIC_KEY_FILE=$HOME/.ssh/id_rsa.pub
if [[ -r $PUBLIC_KEY_FILE ]]; then
    SSH_TMP_DIR=$TMP_DIR/ssh.pub.key
    mkdir -p $SSH_TMP_DIR
    cp $PUBLIC_KEY_FILE $SSH_TMP_DIR
    OPTS="$OPTS $SSH_TMP_DIR"
fi

DNS_OPTS=""
DNS_IP=$(docker inspect --format='{{.NetworkSettings.IPAddress}}' dns 2> /dev/null || :)
if [[ -n "$DNS_IP" ]]; then
    echo "local dns server: $DNS_IP"
    DNS_OPTS="--dns $DNS_IP --dns-search $DOMAIN"
else
    echo "no local dns server found"
fi

echo "starting container $NAME"
DOCKER_ID=$(docker run -d \
    -v $(pwd):/docker \
    -w /docker \
    -h $NAME \
    --name=$NAME \
    $DNS_OPTS \
    $IMAGE \
    $OPTS)

IP=$(docker inspect --format='{{.NetworkSettings.IPAddress}}' $DOCKER_ID)
echo "container id: $DOCKER_ID"
echo "container ip: $IP"

if [[ -n "$DNS_IP" ]]; then
    echo -n "adding to local dns: "
    curl -X PUT -d '{"Node": "'$NAME'", "Address": "'$IP'"}' localhost:8500/v1/catalog/register
    echo

    echo -n "rechecking local dns: "
    dig +short $NAME.$DOMAIN
fi

echo "$NAME/$IP started"
echo
